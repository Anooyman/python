!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DELIMITER	vote.py	/^    DELIMITER = '\\n'$/;"	v	class:VoteInfo
DELI_SIZE	vote.py	/^    DELI_SIZE = 2$/;"	v	class:VoteInfo
DOMTree	pcap2xml.py	/^    DOMTree = ET.parse("com.ophone.MiniPlayer.pdml")$/;"	v
HtmlDownloader	HtmlDownloader.py	/^class HtmlDownloader(object):$/;"	c	inherits:object
HtmlOutputer	HtmlOutputer.py	/^class HtmlOutputer(object):$/;"	c	inherits:object
HtmlParser	HtmlParser.py	/^class HtmlParser(object):$/;"	c	inherits:object
INQUIRY_FLAG	vote.py	/^    INQUIRY_FLAG = 0x0100$/;"	v	class:VoteInfo
MAGIC	vote.py	/^    MAGIC = 0x5400$/;"	v	class:VoteInfo
MAGIC_MASK	vote.py	/^    MAGIC_MASK = 0xFC00$/;"	v	class:VoteInfo
MAX_CANDIDATE	vote.py	/^    MAX_CANDIDATE = 1000$/;"	v	class:VoteInfo
MAX_WIRE_SIZE	vote.py	/^    MAX_WIRE_SIZE = 500$/;"	v	class:VoteInfo
RESPONSE_FLAG	vote.py	/^    RESPONSE_FLAG = 0x0200$/;"	v	class:VoteInfo
SchoolMember	school.py	/^class SchoolMember:$/;"	c	inherits:
SpiderMain	PythonBug.py	/^class SpiderMain(object):$/;"	c	inherits:object
Student	school.py	/^class Student(SchoolMember):$/;"	c	inherits:SchoolMember
Teacher	school.py	/^class Teacher(SchoolMember):$/;"	c	inherits:SchoolMember
UrlManager	UrlManager.py	/^class UrlManager(object):$/;"	c	inherits:object
VoteInfo	vote.py	/^class VoteInfo :$/;"	c	inherits:
__del__	school.py	/^    def __del__(self):$/;"	m	class:SchoolMember	file:	access:private
__del__	school.py	/^    def __del__(self):$/;"	m	class:Student	file:	access:private
__del__	school.py	/^    def __del__(self):$/;"	m	class:Teacher	file:	access:private
__init__	HtmlOutputer.py	/^    def __init__(self):$/;"	m	class:HtmlOutputer	access:public
__init__	PythonBug.py	/^    def __init__(self):$/;"	m	class:SpiderMain	access:public
__init__	UrlManager.py	/^    def __init__(self):$/;"	m	class:UrlManager	access:public
__init__	school.py	/^    def __init__(self,name):$/;"	m	class:SchoolMember	access:public
__init__	school.py	/^    def __init__(self,name,mark,idnum):$/;"	m	class:Student	access:public
__init__	school.py	/^    def __init__(self,name,salary):$/;"	m	class:Teacher	access:public
__init__	vote.py	/^    def __init__(self, candidate = -1, isInquiry = True, isResponse = False, count = -1L):$/;"	m	class:VoteInfo	access:public
_get_new_data	HtmlParser.py	/^    def _get_new_data(self,page_url,soup):$/;"	m	class:HtmlParser	access:public
_get_new_urls	HtmlParser.py	/^    def _get_new_urls(self,page_url,soup):$/;"	m	class:HtmlParser	access:public
a	str.py	/^    a='aAsmr3idd4bgs7Dlsf9eAF'$/;"	v
add_new_url	UrlManager.py	/^    def add_new_url(self,url):$/;"	m	class:UrlManager	access:public
add_new_urls	UrlManager.py	/^    def add_new_urls(self,urls):$/;"	m	class:UrlManager	access:public
address	socket_client.py	/^    address = sys.argv[2]$/;"	v
all_the_text	2012.py	/^    all_the_text=open_file(file_name,'read_all')$/;"	v
allnum	josephus.py	/^    allnum=int(sys.argv[1])$/;"	v
candidate_ID	vote_client.py	/^	candidate_ID = int(sys.argv[2])$/;"	v
collect_data	HtmlOutputer.py	/^    def collect_data(self,data):$/;"	m	class:HtmlOutputer	access:public
collection	pcap2xml.py	/^    collection = DOMTree.getroot()$/;"	v
cookiebug	bug.py	/^def cookiebug(url):$/;"	f	access:public
count	fib.py	/^def count(n):$/;"	f	access:public
count	score.py	/^def count(n):$/;"	f	access:public
cout	fib.py	/^def cout(n):$/;"	f	access:public
craw	PythonBug.py	/^    def craw(self,root_url):$/;"	m	class:SpiderMain	access:public
creat_number	lucky.py	/^def creat_number():$/;"	f	access:public
cursor	pcap2xml.py	/^    cursor = db.cursor()$/;"	v
data_size	pcap2xml.py	/^                data_size = item.attrib["size"]$/;"	v
data_size	pcap2xml.py	/^        data_size = 0 $/;"	v
data_size	pcap2xml.py	/^       data_size = line[6]$/;"	v
db	pcap2xml.py	/^    db = sqlite3.connect("PACKETS.db")$/;"	v
decodeBin	vote.py	/^    def decodeBin(self, sText):$/;"	m	class:VoteInfo	access:public
decodeText	vote.py	/^    def decodeText(self, sText):$/;"	m	class:VoteInfo	access:public
download	HtmlDownloader.py	/^    def download(self,url):$/;"	m	class:HtmlDownloader	access:public
dst_ip	pcap2xml.py	/^                dst_ip = string[s+5:t]$/;"	v
dst_ip	pcap2xml.py	/^        dst_ip = ""$/;"	v
dst_ip	pcap2xml.py	/^       dst_ip = line[4]$/;"	v
dst_port	pcap2xml.py	/^                dst_port = string[s+10:t]$/;"	v
dst_port	pcap2xml.py	/^        dst_port = "" $/;"	v
dst_port	pcap2xml.py	/^       dst_port = line[5]$/;"	v
echo_client	socket_client.py	/^def echo_client(message,address,port):$/;"	f	access:public
echo_server	socket_sever.py	/^def echo_server(port):$/;"	f	access:public
encodeBin	vote.py	/^    def encodeBin(self):$/;"	m	class:VoteInfo	access:public
encodeText	vote.py	/^    def encodeText(self):$/;"	m	class:VoteInfo	access:public
end_port	script.py	/^        end_port = 65535$/;"	v
end_port	script.py	/^        end_port = int(sys.argv[2])$/;"	v
file0	pcap2xml.py	/^    file0 = open("new.xml","w")$/;"	v
file_len	2012.py	/^    file_len=open_file(file_name,'len')$/;"	v
file_name	2012.py	/^    file_name=sys.argv[1]$/;"	v
file_name	lucky.py	/^    file_name=sys.argv[1]$/;"	v
find_number	2012.py	/^def find_number(name):$/;"	f	access:public
find_number	lucky.py	/^def find_number(file_name):$/;"	f	access:public
find_number	str.py	/^def find_number(a):$/;"	f	access:public
findnum	number.py	/^def findnum(n):$/;"	f	access:public
getNextMsgBin	vote.py	/^    def getNextMsgBin(self,sock):$/;"	m	class:VoteInfo	access:public
getNextMsgText	vote.py	/^    def getNextMsgText(self,sock):$/;"	m	class:VoteInfo	access:public
get_new_url	UrlManager.py	/^    def get_new_url(self):$/;"	m	class:UrlManager	access:public
has_new_url	UrlManager.py	/^    def has_new_url(self):$/;"	m	class:UrlManager	access:public
host	socket_sever.py	/^host = 'localhost'$/;"	v
host	vote_server.py	/^host = 'localhost'$/;"	v
html_doc	bug.py	/^    html_doc = cookiebug(url)$/;"	v
i	score.py	/^            i=i+1$/;"	v
i	score.py	/^    i=1$/;"	v
indent	pcap2xml.py	/^def indent(elem, level=0):$/;"	f	access:public
int_ip	text.py	/^    int_ip = int_ip+1$/;"	v
int_ip	text.py	/^    int_ip = socket.ntohl(struct.unpack("I",socket.inet_aton(str(ip)))[0])$/;"	v
ip	text.py	/^    ip = '127.0.0.1'$/;"	v
ip_ip	text.py	/^    ip_ip = socket.inet_ntoa(struct.pack('I',socket.htonl(int_ip)))$/;"	v
kbhit	lucky.py	/^def kbhit():$/;"	f	access:public
link	bug.py	/^    link = soup.find_all('a')$/;"	v
link1	bug.py	/^    link1= soup.find('a',href=re.compile(r'search'))$/;"	v
list1	fib.py	/^    list1=[];$/;"	v
list1	josephus.py	/^    list1=[]$/;"	v
list1	score.py	/^    list1=[]$/;"	v
lucky_number	lucky.py	/^    lucky_number=find_number(file_name)$/;"	v
m	pcap2xml.py	/^       m = {"source_ip":src_ip, "source_port":src_port,$/;"	v
make_dictionary	str.py	/^def make_dictionary(a):$/;"	f	access:public
make_dictionary_withnum	str.py	/^def make_dictionary_withnum(a):$/;"	f	access:public
makepacketnode	pcap2xml.py	/^def makepacketnode(par, mdict):$/;"	f	access:public
message	socket_client.py	/^    message = sys.argv[1]$/;"	v
n	josephus.py	/^            n=(n+quitnum) % len(list1)$/;"	v
n	josephus.py	/^    n=quitnum%allnum$/;"	v
n	vote_client.py	/^            n = False$/;"	v
n	vote_client.py	/^            n = True$/;"	v
num	fib.py	/^        num=8$/;"	v
num	fib.py	/^        num=int(sys.argv[1])  #获取命令行参数$/;"	v
num	number.py	/^        num =10$/;"	v
num	number.py	/^        num=int(sys.argv[1])$/;"	v
num	pcap2xml.py	/^       num = line[0]$/;"	v
num	pcap2xml.py	/^    num = 1$/;"	v
num	score.py	/^        num=float(raw_input())$/;"	v
obj_spider	PythonBug.py	/^    obj_spider = SpiderMain()$/;"	v	class:SpiderMain
open_file	2012.py	/^def open_file(name,how):$/;"	f	access:public
openandwrite_file	2012.py	/^def openandwrite_file(open_name,write_name):$/;"	f	access:public
output_html	HtmlOutputer.py	/^    def output_html(self):$/;"	m	class:HtmlOutputer	access:public
packet_size	pcap2xml.py	/^            packet_size = item.attrib["size"]$/;"	v
packet_size	pcap2xml.py	/^        packet_size = 0 $/;"	v
packet_size	pcap2xml.py	/^       packet_size = line[8]$/;"	v
parse	HtmlParser.py	/^    def parse(self, page_url, html_cont):$/;"	m	class:HtmlParser	access:public
port	socket_client.py	/^    port = int(sys.argv[3])$/;"	v
port	socket_sever.py	/^    port = int(sys.argv[1])$/;"	v
port	vote_server.py	/^        port = 5005$/;"	v
port	vote_server.py	/^        port = int(sys.argv[1])$/;"	v
printInfo	vote.py	/^    def printInfo(self):$/;"	m	class:VoteInfo	access:public
protocol	pcap2xml.py	/^                protocol = "tcp"$/;"	v
protocol	pcap2xml.py	/^                protocol = "udp"$/;"	v
protocol	pcap2xml.py	/^        protocol = ""$/;"	v
protocol	pcap2xml.py	/^       protocol = line[3]$/;"	v
putMsgBin	vote.py	/^    def putMsgBin(self,data,sock):$/;"	m	class:VoteInfo	access:public
putMsgText	vote.py	/^    def putMsgText(self,data,sock):$/;"	m	class:VoteInfo	access:public
quitnum	josephus.py	/^    quitnum=int(sys.argv[2])$/;"	v
quitnum	josephus.py	/^    quitnum=quitnum-1$/;"	v
read_file	lucky.py	/^def read_file(name):$/;"	f	access:public
requestbug	bug.py	/^def requestbug(url):$/;"	f	access:public
results	pcap2xml.py	/^    results = cursor.execute(sql)$/;"	v
rm_word	str.py	/^def rm_word(a):$/;"	f	access:public
root	pcap2xml.py	/^    root = ET.Element("packetcollection")$/;"	v
root_url	PythonBug.py	/^    root_url="http:\/\/baike.baidu.com\/view\/262.htm"$/;"	v	class:SpiderMain
s	pcap2xml.py	/^                s = string.find("Dst Port:",t)$/;"	v
s	pcap2xml.py	/^                s = string.find("Dst:", t)$/;"	v
s	pcap2xml.py	/^                s = string.find("Src Port:",0)$/;"	v
s	pcap2xml.py	/^                s = string.find("Src:", 0)$/;"	v
s	school.py	/^    s=Student("小河",77,2012001)$/;"	v
say_hello	school.py	/^    def say_hello(self):$/;"	m	class:SchoolMember	access:public
say_hello	school.py	/^    def say_hello(self):$/;"	m	class:Student	access:public
say_hello	school.py	/^    def say_hello(self):$/;"	m	class:Teacher	access:public
scan_ports	script.py	/^def scan_ports(host,start_port,end_port):$/;"	f	access:public
server_ip	vote_client.py	/^	server_ip = sys.argv[3]$/;"	v
server_port	vote_client.py	/^		server_port = 5005$/;"	v
server_port	vote_client.py	/^		server_port = int(sys.argv[4])$/;"	v
setProperty	vote.py	/^    def setProperty(self, isInquiry, isResponse, count):$/;"	m	class:VoteInfo	access:public
simplebug	bug.py	/^def simplebug(url):$/;"	f	access:public
sort_dictionary	str.py	/^def sort_dictionary(a):$/;"	f	access:public
soup	bug.py	/^    soup = BeautifulSoup(html_doc,'html.parser',from_encoding='utf-8')$/;"	v
sql	pcap2xml.py	/^    sql = "SELECT * FROM packet"$/;"	v
src_ip	pcap2xml.py	/^                src_ip = string[s+5:t]$/;"	v
src_ip	pcap2xml.py	/^        src_ip = ""$/;"	v
src_ip	pcap2xml.py	/^       src_ip = line[1]$/;"	v
src_port	pcap2xml.py	/^                src_port = string[s+10:t]$/;"	v
src_port	pcap2xml.py	/^        src_port = ""$/;"	v
src_port	pcap2xml.py	/^       src_port = line[2]$/;"	v
start_port	script.py	/^        start_port = 1$/;"	v
start_port	script.py	/^        start_port = int(sys.argv[1])$/;"	v
string	pcap2xml.py	/^                string = item.attrib["showname"]$/;"	v
sum_number	school.py	/^    sum_number=0$/;"	v	class:SchoolMember
t	pcap2xml.py	/^                t = string.find(" (",0)$/;"	v
t	pcap2xml.py	/^                t = string.find(" (",t+1)$/;"	v
t	school.py	/^    t=Teacher("老黄",3000)$/;"	v
timestamp	pcap2xml.py	/^                timestamp = x.attrib["show"]$/;"	v
timestamp	pcap2xml.py	/^        timestamp = "" $/;"	v
timestamp	pcap2xml.py	/^       timestamp = line[7]$/;"	v
tree	pcap2xml.py	/^    tree = ET.ElementTree(root)$/;"	v
url	bug.py	/^    url = 'http:\/\/baike.baidu.com\/view\/21087.htm'$/;"	v
vote_client	vote_client.py	/^def vote_client(port,candidate,server_ip,way):$/;"	f	access:public
vote_server	vote_server.py	/^def vote_server(port):$/;"	f	access:public
voting_count	vote_server.py	/^voting_count = [0 for x in xrange(VoteInfo.MAX_CANDIDATE)]$/;"	v
way	vote_client.py	/^	way = sys.argv[1]$/;"	v
write_file	2012.py	/^def write_file(name,content):$/;"	f	access:public
write_file	lucky.py	/^def write_file(name,content):$/;"	f	access:public
x	pcap2xml.py	/^       x = makepacketnode(root,m)$/;"	v
